<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lip21504.github.io/</id>
    <title>ZhouXing</title>
    <updated>2020-03-03T08:23:01.832Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lip21504.github.io/"/>
    <link rel="self" href="https://lip21504.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://lip21504.github.io/images/avatar.png</logo>
    <icon>https://lip21504.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, ZhouXing</rights>
    <entry>
        <title type="html"><![CDATA[无符号类型]]></title>
        <id>https://lip21504.github.io/post/wu-fu-hao-lei-xing</id>
        <link href="https://lip21504.github.io/post/wu-fu-hao-lei-xing">
        </link>
        <updated>2020-03-03T07:40:11.000Z</updated>
        <content type="html"><![CDATA[<p>如果short表示的范围是-32768到+32767，则无符号版本表示的范围是0~65535。仅当数值不会为负数值时才应该使用无符号类型，例如人口等要创建无符号版本的基本范围，只需要使用unsigned来修改声明即可：<br>
unsigned short change;//unsigned short 类型<br>
unsigned int change;//unsigned int 类型<br>
unsigned quarterbac;//还是unsigned int 类型<br>
**注意unsigned本身就是unsigned int类型的缩写；</p>
<p>下面程序将演示如何使用无符号类型<br>
#include <iostream><br>
#include <climits><br>
#define ZERO 0<br>
using namespace std;<br>
int main()<br>
{<br>
short sam = SHRT_MAX;<br>
unsigned short sue = sam;</p>
<pre><code>cout&lt;&lt;&quot;sam has&quot;&lt;&lt;sam&lt;&lt;&quot; RMB and sue has &quot;&lt;&lt;sue&lt;&lt;endl;

cout&lt;&lt;&quot;money deposited&quot;&lt;&lt;endl;
cout&lt;&lt;&quot;Add 1$each count &quot;&lt;&lt;endl&lt;&lt;&quot; NOW &quot;;
sam+=1;
sue+=1;
cout&lt;&lt;&quot;sam has &quot;&lt;&lt;sam&lt;&lt;&quot; RMB and sue has &quot;&lt;&lt;sue&lt;&lt;endl;
cout&lt;&lt;&quot; money deposited \nPoor sam!&quot;&lt;&lt;endl;

sam = ZERO;
sue = ZERO;
cout&lt;&lt;&quot;sam has &quot;&lt;&lt;sam&lt;&lt;&quot; RMB and sue has &quot;&lt;&lt;sue&lt;&lt;endl;
cout&lt;&lt;&quot;take 1$ from each account.&quot;&lt;&lt;endl&lt;&lt;&quot;NOW &quot;;
sam-=1;
sue-=1;

cout&lt;&lt;&quot;sam has &quot;&lt;&lt;sam&lt;&lt;&quot; RMB and sue has &quot;&lt;&lt;sue&lt;&lt;endl;
cout&lt;&lt;&quot;LUCK sue!!&quot;&lt;&lt;endl;
return 0;
</code></pre>
<p>}<br>
运行结果：<br>
<img src="https://lip21504.github.io//post-images/1583223164368.png" alt="" loading="lazy"></p>
<p>这个程序将一个short变量（sam）和一个unsigned short变量（sue）分别设置为最大的short值，我们的系统上，是32767.然后将这些变量的值加1，这对sue来说没有什么问题，因为新值仍然比无符号整数的最大值小得多，但是sam加1的值从32767变成-32768！同样将其设置为0并减去1，也不会有问题；但对于无符号变量sue，将其减1变成65535.可以看出如果超越了限制，其值将范围的另一端的取值。c++确保了无符号类型的这种行为，但是c++并不保证符号整形超越限制时不出错，而这正是实现中最常见的行为。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[基于nodejs建立我的第一个静态博客（一）]]></title>
        <id>https://lip21504.github.io/post/ji-yu-nodejs-jian-li-wo-de-di-yi-ge-jing-tai-bo-ke-yi</id>
        <link href="https://lip21504.github.io/post/ji-yu-nodejs-jian-li-wo-de-di-yi-ge-jing-tai-bo-ke-yi">
        </link>
        <updated>2020-02-12T05:52:50.000Z</updated>
        <content type="html"><![CDATA[<p>用nodejs搭建博客是我在b站看一个叫CodeSheep的up主发的教程，（顺便说一句，这个up主相当良心滴！）整个搭建过程都是免费，不用购买域名服务器、主机等乱七八糟的东西。但是在开始之前需要准备一下东西：<br>
1、首先需要注册自己的github的账号，注册很简单去https://github.com 注册，有些使用win系统的童鞋可能会登不进去，这个问题我文章后续会说。如果登不进去先做下一步😄</p>
<p>2、其中要用到git for Windows，直接从百度上搜就可以。https://git-scm.com/download/win</p>
<p>具体步骤如下：<br>
1、打开终端，hexo是需要nodejs的支持的，看nodejs的版本及npm（包管理器）的版本确认已经安装<br>
<img src="https://lip21504.github.io//post-images/1581573234194.png" alt="" loading="lazy"></p>
<p>2、借助npm包管理器来安装，但是国内镜像元的速度很慢，逆用npm来安装一个cnpm，淘宝的镜像元比较快<br>
输入这行命令<br>
<img src="https://lip21504.github.io//post-images/1581573355284.png" alt="" loading="lazy"></p>
<p>3、安装完之后<br>
继续输入命令<br>
<img src="https://lip21504.github.io//post-images/1581573424410.png" alt="" loading="lazy"><br>
安装完之后的界面<img src="https://lip21504.github.io//post-images/1581573441126.png" alt="" loading="lazy"></p>
<p>4、建一个新的文件夹，在任何一个盘下叫blog在终端进到这个文件夹里cd blog.之后的所有操作都在这个文件夹下操作的。</p>
<p>5、用这个命令初始化一个博客<br>
<img src="https://lip21504.github.io//post-images/1581573461634.png" alt="" loading="lazy"><br>
如果这部出错了，那就是你没有安装git for Windows</p>
<p>6、hexo s这条命令就是打开初始化的博客，一般是本地的4000端口，去随便一个浏览器去看就好</p>
<p>7、写文章的话hexo n一片文章格式如下<br>
<img src="https://lip21504.github.io//post-images/1581573492635.png" alt="" loading="lazy"><br>
然后进到里面<br>
cd sourse\ _posts\这个目录下dir就可以写了</p>
<p>8、用户部署github的仓库格式必须是“用户名.github.io“千万不能写别的！！！！后期在浏览器里写这个地址就可以访问了<img src="https://lip21504.github.io//post-images/1581574246700.jpg" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://lip21504.github.io/post/hello-gridea</id>
        <link href="https://lip21504.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>